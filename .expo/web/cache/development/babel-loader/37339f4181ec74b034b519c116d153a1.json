{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/olivier/My-project/signal-clone/signal-clone-app/screens/AddChatScreen.js\";\n\nimport React, { useLayoutEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Icon, Input, Button } from \"react-native-elements\";\nimport { db } from \"../firebase\";\n\nvar AddChatScreen = function AddChatScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Add a new chat\",\n      headerBackTitle: \"Chats\"\n    });\n  }, [navigation]);\n\n  var createChat = function createChat() {\n    return _regeneratorRuntime.async(function createChat$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(db.collection('chats').add({\n              chatName: input\n            }).then(function () {\n              navigation.goBack();\n            }).catch(function (error) {\n              return alert(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Enter a name for the chat\",\n    value: input,\n    onChangeText: function onChangeText(text) {\n      return setInput(text);\n    },\n    onSubmitEditing: createChat,\n    leftIcon: React.createElement(Icon, {\n      name: \"wechat\",\n      type: \"antdesign\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: createChat,\n    title: \"Create chat\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AddChatScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    padding: 30,\n    height: \"100%\"\n  }\n});","map":{"version":3,"sources":["/home/olivier/My-project/signal-clone/signal-clone-app/screens/AddChatScreen.js"],"names":["React","useLayoutEffect","useState","Icon","Input","Button","db","AddChatScreen","navigation","input","setInput","setOptions","title","headerBackTitle","createChat","collection","add","chatName","then","goBack","catch","error","alert","styles","container","text","StyleSheet","create","backgroundColor","padding","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;;;;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,uBAApC;AACA,SAASC,EAAT;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACdN,QAAQ,CAAC,EAAD,CADM;AAAA;AAAA,MACjCO,KADiC;AAAA,MAC1BC,QAD0B;;AAGxCT,EAAAA,eAAe,CAAC,YAAM;AACpBO,IAAAA,UAAU,CAACG,UAAX,CAAsB;AACpBC,MAAAA,KAAK,EAAE,gBADa;AAEpBC,MAAAA,eAAe,EAAE;AAFG,KAAtB;AAID,GALc,EAKZ,CAACL,UAAD,CALY,CAAf;;AAOA,MAAMM,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACTR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AAC7BC,cAAAA,QAAQ,EAAER;AADmB,aAA3B,EAEHS,IAFG,CAEE,YAAM;AACVV,cAAAA,UAAU,CAACW,MAAX;AACH,aAJK,EAIHC,KAJG,CAIG,UAACC,KAAD;AAAA,qBAAWC,KAAK,CAACD,KAAD,CAAhB;AAAA,aAJH,CADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,2BADd;AAEE,IAAA,KAAK,EAAEf,KAFT;AAGE,IAAA,YAAY,EAAE,sBAACgB,IAAD;AAAA,aAAUf,QAAQ,CAACe,IAAD,CAAlB;AAAA,KAHhB;AAIE,IAAA,eAAe,EAAEX,UAJnB;AAKE,IAAA,QAAQ,EACJ,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,IAAI,EAAC,WAAzB;AAAqC,MAAA,IAAI,EAAE,EAA3C;AAA+C,MAAA,KAAK,EAAC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,UAAjB;AAA6B,IAAA,KAAK,EAAC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CAhCD;;AAkCA,eAAeP,aAAf;AAEA,IAAMgB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,eAAe,EAAE,OADV;AAEPC,IAAAA,OAAO,EAAE,EAFF;AAGPC,IAAAA,MAAM,EAAE;AAHD;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useLayoutEffect, useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Icon, Input, Button } from \"react-native-elements\";\nimport { db } from \"../firebase\";\n\nconst AddChatScreen = ({ navigation }) => {\n  const [input, setInput] = useState(\"\");\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Add a new chat\",\n      headerBackTitle: \"Chats\",\n    });\n  }, [navigation]);\n\n  const createChat = async () => {\n      await db.collection('chats').add({\n          chatName: input,\n      }).then(() => {\n          navigation.goBack();\n      }).catch((error) => alert(error));\n  };\n\n  return (\n    <View style={styles.container}>\n      <Input\n        placeholder=\"Enter a name for the chat\"\n        value={input}\n        onChangeText={(text) => setInput(text)}\n        onSubmitEditing={createChat}\n        leftIcon={\n            <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"black\"/>\n        }\n      />\n      <Button onPress={createChat} title=\"Create chat\"/>\n    </View>\n  );\n};\n\nexport default AddChatScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n      backgroundColor: \"white\",\n      padding: 30,\n      height: \"100%\",\n  }\n});"]},"metadata":{},"sourceType":"module"}